# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, List, Mapping, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Animals(_model_base.Model):
    """Animal.

    All required parameters must be populated in order to send to Azure.

    :ivar content: Required. Is either a [Cat] type or a [Dog] type.
    :vartype content: list[~testunion.models.Cat] or list[~testunion.models.Dog]
    """

    content: Union[List["_models.Cat"], List["_models.Dog"]] = rest_field()
    """Required. Is either a [Cat] type or a [Dog] type."""

    @overload
    def __init__(
        self,
        *,
        content: Union[List["_models.Cat"], List["_models.Dog"]],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Cat(_model_base.Model):
    """Cat.

    All required parameters must be populated in order to send to Azure.

    :ivar eat_fish: Required.
    :vartype eat_fish: bool
    """

    eat_fish: bool = rest_field(name="eatFish")
    """Required."""

    @overload
    def __init__(
        self,
        *,
        eat_fish: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Dog(_model_base.Model):
    """Dog.

    All required parameters must be populated in order to send to Azure.

    :ivar eat_bone: Required.
    :vartype eat_bone: bool
    """

    eat_bone: bool = rest_field(name="eatBone")
    """Required."""

    @overload
    def __init__(
        self,
        *,
        eat_bone: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
